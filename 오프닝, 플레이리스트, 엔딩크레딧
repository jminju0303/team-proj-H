let currentScreen = 1;
let tutorialBtn = null;

let searchInput, searchButton, playButton;
let searchResults = [];
let playlist = [];
let player;
let currentPlayingIndex = 0;
let playerReady = false;

let endingQuestions = [
  "내 인생의 목표는 무엇이었나?",
  "가장 자랑스러웠던 일은 무엇이었나?",
  "가장 미안한 사람은 누구인가?",
  "가장 행복했던 순간은 언제였나?",
  "자주 숨기고 살았던 감정은 무엇인가?",
  "나를 자주 울게 만든 일은 무엇이었나?",
  "끝까지 포기하지 않았던 것은 무엇이었나?",
  "다시 도전해보고 싶은 일은 무엇인가?",
  "가장 자주 찾은 장소는 어디였나?",
  "‘나’를 기억할 단 한 장면이 있다면, 어떤 모습이었으면 좋을까?",
  "이 삶에서 배운 가장 큰 교훈은 무엇이었나?",
  "나에게 ‘죽음’은 어떤 의미인가?",
  "지금 떠나며 아쉬운 것이 있다면?",
  "내 장례식에 꼭 와줬으면 하는 사람들은 누구인가?",
  "마지막으로 남기고 싶은 말은 무엇인가?"
];
let currentQuestionIndex = 0;
let endingCredits = [];
let answerInput;

let creditScrollY = 0;
let scrollSpeed = 0.7;

function setup() {
  createCanvas(windowWidth, windowHeight);
  textAlign(CENTER, CENTER);
  rectMode(CENTER);
  noStroke();

  // 검색창 및 버튼
  searchInput = createInput();
  searchInput.position(100, 50);
  searchInput.size(300);
  searchInput.hide();
  searchButton = createButton('검색');
  searchButton.position(410, 50);
  searchButton.mousePressed(() => {
    let query = searchInput.value();
    if (query) searchYouTube(query);
  });
  searchButton.hide();

  playButton = createButton('▶️ 재생');
  playButton.position(500, 50);
  playButton.mousePressed(playPlaylist);
  playButton.hide();
}

function draw() {
  background(255);

  if (currentScreen === 1) {
    drawScreen1();
  } else if (currentScreen === 2) {
    drawScreen2();
  } else if (currentScreen === 3) {
    drawScreen3();
  } else if (currentScreen === 4) {
    drawScreen4();
  } else if (currentScreen === 5) {
    drawScreen5();
  } else if (currentScreen === 6) {
    drawScreen6();
  } else if (currentScreen === 7) {
    drawScreen7();
  } else if (currentScreen === 8) {
    drawScreen8();
  } else if (currentScreen === 9) {
    drawScreen9();
  } else if (currentScreen === 10) {
    drawScreen10();
  } else if (currentScreen === 11) {
    drawScreen11();
  } else if (currentScreen === 12) {
    drawScreen12();
  } else if (currentScreen === 13) {
    drawScreen13();
  } else if (currentScreen === 14) {
    drawScreen14();
  } else if (currentScreen === 15) {
    drawScreen15();
  } else if (currentScreen === 16) {
    drawScreen16();
  }
}

function drawScreen1() {
  fill(0);
  textSize(32);
  text("내 인생의 엔딩 크레딧", width / 2, height / 2 - 100);
  textSize(18);
  text("당신의 마지막을 직접 설계해보시겠습니까?", width / 2, height / 2 - 40);

  let btnX = width / 2;
  let btnY = height / 2 + 30;
  let btnW = 100;
  let btnH = 40;

  if (
    mouseX > btnX - btnW / 2 &&
    mouseX < btnX + btnW / 2 &&
    mouseY > btnY - btnH / 2 &&
    mouseY < btnY + btnH / 2
  ) {
    fill(230);
  } else {
    fill(245);
  }
  stroke(150);
  rect(btnX, btnY, btnW, btnH, 10);
  noStroke();
  fill(0);
  textSize(16);
  text("시작하기", btnX, btnY);
}

function drawScreen2() {
  fill(230);
  noStroke();
  let bx = width / 2;
  let by = height / 2;
  fill(245);
  rect(bx, by, 100, 70);
  fill(180);
  triangle(bx - 50, by - 35, bx + 50, by - 35, bx, by + 10);

  if (mouseX > bx - 50 && mouseX < bx + 50 && mouseY > by - 35 && mouseY < by + 35) {
    fill(0, 0, 0, 20);
    rect(bx, by, 100, 70);
  }

  fill(80);
  textSize(18);
  text("저승사자 님으로부터 메일이 도착하였습니다.", width / 2, height / 2 + 100);
}

function drawScreen3() {
  fill(240);
  stroke(180);
  rect(width / 2, height / 2, 600, 350, 5);
  noStroke();
  fill(220);
  rect(width / 2, height / 2 - 140, 600, 30);
  fill(100);
  textSize(20);
  text("귀하의 사망예정일을 알려드립니다", width / 2, height / 2 - 80);
  textSize(14);
  text("보낸사람 저승사자 <support@jeoseung.com>", width / 2, height / 2 - 55);
  text("안녕하세요. 저승컴퍼니입니다.", width / 2, height / 2 - 20);
  text("귀하의 사망예정일은 0000년 00월 00일입니다.", width / 2, height / 2);
  text("본사에서는 무료로 장례식 컨설팅을 진행하고 있습니다.", width / 2, height / 2 + 20);
  text("아래 링크로 방문해주시면 감사하겠습니다.", width / 2, height / 2 + 40);

  let bx = width / 2;
  let by = height / 2 + 80;
  let bw = 250;
  let bh = 40;

  if (
    mouseX > bx - bw / 2 &&
    mouseX < bx + bw / 2 &&
    mouseY > by - bh / 2 &&
    mouseY < by + bh / 2
  ) {
    fill(200);
  } else {
    fill(230);
  }
  rect(bx, by, bw, bh, 10);
  fill(0);
  text("장례식 컨설팅 바로가기", bx, by);
}

function drawScreen4() {
  let content =
    "사람마다 마지막이 다르듯, 마지막을 기억하는 방식도 다릅니다. 어떤 분은 조용히, 어떤 분은 웃으며, 또 어떤 분은 꼭 참던 눈물을 흘리며 당신을 떠올릴 겁니다.\n그래서 음악이 필요하죠. 장례식의 공기는 곡 하나로 바뀌거든요.";
  drawTutorialScreen(content);
}

function drawScreen5() {
  let content =
    "이건 당신이 남기는 첫 번째 선택이에요. \n슬퍼도 괜찮고, 신나도 아무도 뭐라 안 합니다. \n남겨질 사람들이 당신을 떠올리며 이 노래를 들을 테니, 어떻게 추억되고 싶은지 노래로 표현해보세요.";
  drawTutorialScreen(content);
}

function drawScreen6() {
  let content =
    "자, 이제 마음 속에 떠오르는 노래가 있다면 검색창에 넣어보세요. \n원하는 노래를 자유롭게 플레이리스트에 담으면 됩니다. \n한 곡만으로 부족하다면 더 넣으셔도 되고요. 인생이라는 게, 한 곡으로는 설명이 안 되잖아요?";
  drawTutorialScreen(content);
}

function drawScreen7() {
  let content =
    "재생 버튼을 누르시면 미리 들어보실 수도 있어요. 분위기 확인용으로. \n그럼 장례식장 플레이리스트, 골라보실까요? \n너무 오래 걸리셔도… 조금 곤란하긴 해요. 시간이 그렇게 많진 않거든요.";
  drawTutorialScreen(content);
}

// 유튜브 IFrame API 준비 후 호출됨
function onYouTubeIframeAPIReady() {
  player = new YT.Player('invisible-player', {
    height: '0',
    width: '0',
    videoId: '',
    events: {
      onReady: () => {
        playerReady = true;
      },
      onStateChange: onPlayerStateChange,
    }
  });
}

function drawScreen8() {
  background(255);

  // UI 보이기
  searchInput.show();
  searchButton.show();
  playButton.show();

  fill(0);
  textSize(24);
  text("마지막으로 단 4곡만 들을 수 있다면, 듣고 싶은 노래는?", width / 2, 100);

  // 검색 결과 보여주기
  textSize(16);
  for (let i = 0; i < searchResults.length; i++) {
    let y = 150 + i * 40;
    fill(230);
    rect(width / 2, y, 500, 30, 10);
    fill(0);
    text(searchResults[i].title, width / 2, y);
  }

  // 현재 재생목록 보여주기
  textSize(18);
  text("▶ 플레이리스트", 150, height - 200);
  textSize(14);
  for (let i = 0; i < playlist.length; i++) {
    text(`- ${playlist[i].title}`, 150, height - 170 + i * 20);
  }
}

function drawScreen9() {
  let content =
    "이렇게 모든 설계가 마무리됐습니다.\n음악도 정했고, 영정사진도 찍었고, 공간도 꾸몄고, 먹고 마실 것도 빠짐없이 준비하셨어요.";
  drawTutorialScreen(content);
}

function drawScreen10() {
  let content =
    "장례식에서 정할 게 꽤 많았죠? 그래도 나의 마지막 순간인데, 내가 직접 정할 기회가 없으면 너무 억울하잖아요.\n당신다운, 당신만의 마지막을 잘 꾸미신 것 같네요.";
  drawTutorialScreen(content);
}

function drawScreen11() {
  let content =
    "이제는… 정말 떠나야 할 시간입니다.\n하지만 걱정 마세요. 당신이 고른 이 모든 것들은, 누군가의 기억 속에서 천천히 재생될 거예요.\n마지막 순간이 어떻게 기억될지 직접 하나하나 골랐으니 후회도 없을 겁니다.";
  drawTutorialScreen(content);
}

function drawScreen12() {
  let content =
    "이번 삶에서의 모든 순간 동안 너무 수고 많으셨습니다.\n마지막으로 나 삶의 엔딩 크레딧을 한 번 작성해볼게요.\n내 인생이 영화라면, 엔딩 크레딧을 어떻게 올리고 싶으세요?";
  drawTutorialScreen(content);
}

function drawScreen13() {
  background(255);

  // 상단 탭 UI
  drawTopTabs();

  // 질문 영역
  fill(0);
  textSize(20);
  textAlign(CENTER);
  text("엔딩 크레딧 작성을 위한 질문", width / 2, 150);

  textSize(16);
  text(endingQuestions[currentQuestionIndex], width / 2, 180);

  // 입력창 보이기
  if (!answerInput) {
    answerInput = createInput();
    answerInput.position(width / 2 - 200, 220);
    answerInput.size(400);
  }

  // 다음 버튼
  let nextBtn = { x: width / 2 - 50, y: 280, w: 100, h: 40 };
  fill(220);
  rect(nextBtn.x, nextBtn.y, nextBtn.w, nextBtn.h, 10);
  fill(0);
  textAlign(CENTER, CENTER);
  text("다음", nextBtn.x + nextBtn.w / 2, nextBtn.y + nextBtn.h / 2);

  // 버튼 클릭 감지
  if (
    mouseIsPressed &&
    mouseX > nextBtn.x &&
    mouseX < nextBtn.x + nextBtn.w &&
    mouseY > nextBtn.y &&
    mouseY < nextBtn.y + nextBtn.h
  ) {
    if (answerInput.value().trim() !== "") {
      endingCredits.push({
        question: endingQuestions[currentQuestionIndex],
        answer: answerInput.value().trim()
      });
      answerInput.remove();
      answerInput = null;
      currentQuestionIndex++;

      if (currentQuestionIndex >= endingQuestions.length) {
        currentScreen = 14; // 엔딩 크레딧 출력 화면으로 전환
      }
    }
  }
}

function drawScreen14() {
  let content =
    "멋진 엔딩크레딧이 되겠군요. 수고 많았어요.\n이제 당신이 하나하나 꾸민 장례식장의 모습을 확인할 차례예요.";
  drawTutorialScreen(content);
}

function drawScreen15() {
  let content =
    "오직 당신만을 위한 끝내주는 파티가 되겠네요.\n죽음에 대한 근심, 걱정은 잠시 내려두고 이 파티를 조금만 즐겨보세요.";
  drawTutorialScreen(content);
}


function drawScreen16() {
  // 화면 오른쪽 절반 배경을 검정으로
  fill(0);
  noStroke();
  rect(width * 0.5, 0, width * 0.5, height);

  // 텍스트 설정
  textAlign(LEFT, TOP);
  textWrap(WORD);
  fill(255);
  let x = width * 0.55;
  let yStart = 80;
  let y = yStart - creditScrollY;
  let contentWidth = width * 0.4;

  // 제목
  textSize(28);
  textStyle(BOLD);
  text("내 인생의 엔딩 크레딧", x, y);
  y += 50;

  // 본문
  textSize(14);
  for (let i = 0; i < endingCredits.length; i++) {
    let entry = endingCredits[i];

    textStyle(BOLD);
    text(entry.question, x, y, contentWidth);
    y += 22;

    textStyle(NORMAL);
    text("- " + entry.answer, x, y, contentWidth);
    y += 38;
  }

  // 실제 내용 전체 높이
  let totalHeight = y - (yStart - creditScrollY);

  // 화면을 초과하는 경우에만 스크롤
  if (totalHeight > height - yStart) {
    creditScrollY += scrollSpeed;
  }
}

function drawTopTabs() {
  background(245);

  // 상단 창 영역
  fill(255);
  stroke(180);
  rect(width / 2, 60, width * 0.97, 40, 3);

  // 좌측 상단 원 3개 (Mac 스타일)
  fill(255, 90, 90);   circle(35, 60, 12);
  fill(255, 220, 80);  circle(55, 60, 12);
  fill(70, 200, 100);  circle(75, 60, 12);

  // 탭 공통 설정
  let tabY = 60;
  let tabH = 40;

  let tabs = [
    { label: "플레이리스트 선곡", x: 180, w: 140 },
    { label: "장례식장 꾸미기", x: 330, w: 140 },
    { label: "화환 꾸미기", x: 480, w: 100 },
    { label: "장례식 식사 큐레이팅", x: 610, w: 180 },
    { label: "장례식 초대장 작성", x: 805, w: 180 }
  ];

  for (let i = 0; i < tabs.length; i++) {
    let tab = tabs[i];

    // 활성 탭만 살짝 진한 회색 배경
    if (tab.label === "장례식 초대장 작성") {
      fill(230);
    } else {
      fill(255);
    }

    stroke(180);
    rect(tab.x, tabY, tab.w, tabH, 5, 5, 0, 0); // 상단 모서리만 라운드

    fill(100);
    noStroke();
    textAlign(CENTER, CENTER);
    textSize(14);
    text(tab.label, tab.x + tab.w / 2, tabY + tabH / 2);
  }
}

function mousePressed() {
  if (currentScreen === 1) {
    let btnX = width / 2;
    let btnY = height / 2 + 30;
    let btnW = 100;
    let btnH = 40;

    if (
      mouseX > btnX - btnW / 2 &&
      mouseX < btnX + btnW / 2 &&
      mouseY > btnY - btnH / 2 &&
      mouseY < btnY + btnH / 2
    ) {
      currentScreen = 2;
    }
  } else if (currentScreen === 2) {
    let bx = width / 2;
    let by = height / 2;
    let bw = 100;
    let bh = 70;

    if (
      mouseX > bx - bw / 2 &&
      mouseX < bx + bw / 2 &&
      mouseY > by - bh / 2 &&
      mouseY < by + bh / 2
    ) {
      currentScreen = 3;
    }
  } else if (currentScreen === 3) {
    let bx = width / 2;
    let by = height / 2 + 80;
    let bw = 250;
    let bh = 40;

    if (
      mouseX > bx - bw / 2 &&
      mouseX < bx + bw / 2 &&
      mouseY > by - bh / 2 &&
      mouseY < by + bh / 2
    ) {
      currentScreen = 4;
    }
  } else if (currentScreen === 4 && tutorialBtn) {
    if (
      mouseX > tutorialBtn.x && mouseX < tutorialBtn.x + tutorialBtn.w &&
      mouseY > tutorialBtn.y && mouseY < tutorialBtn.y + tutorialBtn.h
    ) {
      currentScreen = 5;
    }
  } else if (currentScreen === 5 && tutorialBtn) {
    if (
      mouseX > tutorialBtn.x && mouseX < tutorialBtn.x + tutorialBtn.w &&
      mouseY > tutorialBtn.y && mouseY < tutorialBtn.y + tutorialBtn.h
    ) {
      currentScreen = 6;
    }
  } else if (currentScreen === 6 && tutorialBtn) {
    if (
      mouseX > tutorialBtn.x && mouseX < tutorialBtn.x + tutorialBtn.w &&
      mouseY > tutorialBtn.y && mouseY < tutorialBtn.y + tutorialBtn.h
    ) {
      currentScreen = 7;
    }
  } else if (currentScreen === 7 && tutorialBtn) {
    if (
      mouseX > tutorialBtn.x && mouseX < tutorialBtn.x + tutorialBtn.w &&
      mouseY > tutorialBtn.y && mouseY < tutorialBtn.y + tutorialBtn.h
    ) {
      currentScreen = 8;
    }
  } else if (currentScreen === 8) {
    for (let i = 0; i < searchResults.length; i++) {
      let y = 150 + i * 40;
      if (
        mouseX > width / 2 - 250 && mouseX < width / 2 + 250 &&
        mouseY > y - 15 && mouseY < y + 15
      ) {
        playlist.push(searchResults[i]);
        console.log(`추가됨: ${searchResults[i].title}`);
      }
    }
  } else if (currentScreen === 9 && tutorialBtn) {
    if (
      mouseX > tutorialBtn.x && mouseX < tutorialBtn.x + tutorialBtn.w &&
      mouseY > tutorialBtn.y && mouseY < tutorialBtn.y + tutorialBtn.h
    ) {
      currentScreen = 10;
    }
  } else if (currentScreen === 10 && tutorialBtn) {
    if (
      mouseX > tutorialBtn.x && mouseX < tutorialBtn.x + tutorialBtn.w &&
      mouseY > tutorialBtn.y && mouseY < tutorialBtn.y + tutorialBtn.h
    ) {
      currentScreen = 11;
    }
  } else if (currentScreen === 11 && tutorialBtn) {
    if (
      mouseX > tutorialBtn.x && mouseX < tutorialBtn.x + tutorialBtn.w &&
      mouseY > tutorialBtn.y && mouseY < tutorialBtn.y + tutorialBtn.h
    ) {
      currentScreen = 12;
    }
  } else if (currentScreen === 12 && tutorialBtn) {
    if (
      mouseX > tutorialBtn.x && mouseX < tutorialBtn.x + tutorialBtn.w &&
      mouseY > tutorialBtn.y && mouseY < tutorialBtn.y + tutorialBtn.h
    ) {
      currentScreen = 13;
    }
  } else if (currentScreen === 14 && tutorialBtn) {
    if (
      mouseX > tutorialBtn.x && mouseX < tutorialBtn.x + tutorialBtn.w &&
      mouseY > tutorialBtn.y && mouseY < tutorialBtn.y + tutorialBtn.h
    ) {
      currentScreen = 15;
    }
  } else if (currentScreen === 15 && tutorialBtn) {
    if (
      mouseX > tutorialBtn.x && mouseX < tutorialBtn.x + tutorialBtn.w &&
      mouseY > tutorialBtn.y && mouseY < tutorialBtn.y + tutorialBtn.h
    ) {
      currentScreen = 16;
    }
  }
}

function drawTutorialScreen(textContent) {
  // 회색 박스
  fill(240);
  stroke(180);
  rectMode(CENTER);
  rect(width / 2, height - 140, 1100, 200, 30);

  // 텍스트
  noStroke();
  fill(80);
  textSize(16);
  textAlign(CENTER);

  // 정확한 박스 내부 좌표: 왼쪽 + padding, 위쪽 + padding
  text(textContent, 700, 600);

  // 다음 버튼
  tutorialBtn = { x: width - 160, y: height - 100, w: 80, h: 40 };

  fill(
    mouseX > tutorialBtn.x && mouseX < tutorialBtn.x + tutorialBtn.w &&
    mouseY > tutorialBtn.y && mouseY < tutorialBtn.y + tutorialBtn.h
      ? color(180, 230, 180)
      : color(200, 240, 200)
  );
  stroke(150);
  rectMode(CORNER);
  rect(tutorialBtn.x, tutorialBtn.y, 80, 40, 10);

  noStroke();
  fill(0);
  textAlign(CENTER, CENTER);
  text("다음", tutorialBtn.x + 40, tutorialBtn.y + 20);
}

// 유튜브 검색
function searchYouTube(query) {
  const API_KEY = 'AIzaSyCwni5IDdiBTGJ6PT4y-k57V_MmdUpsHB8';
  const url = `https://www.googleapis.com/youtube/v3/search?part=snippet&type=video&videoEmbeddable=true&maxResults=5&q=${encodeURIComponent(query)}&key=${API_KEY}`;
  fetch(url)
    .then(res => res.json())
    .then(data => {
      searchResults = data.items.map(item => ({
        title: item.snippet.title,
        videoId: item.id.videoId,
      }));
    });
}

// 재생 함수
function playPlaylist() {
  if (!playerReady || playlist.length === 0) return;
  currentPlayingIndex = 0;
  player.cueVideoById(playlist[0].videoId);
  setTimeout(() => {
    player.playVideo();
  }, 1000);
  currentScreen = 9; // 재생 버튼을 누르면 screen9으로 이동
  searchInput.hide();
  searchButton.hide();
  playButton.hide();
}


// 다음 곡으로 넘어가기
function onPlayerStateChange(event) {
  if (event.data === YT.PlayerState.ENDED) {
    currentPlayingIndex++;
    if (currentPlayingIndex < playlist.length) {
      player.loadVideoById(playlist[currentPlayingIndex].videoId);
    }
  }
}

